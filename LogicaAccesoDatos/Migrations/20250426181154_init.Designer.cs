// <auto-generated />
using System;
using LogicaAccesoDatos.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20250426181154_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EtapaSeguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEnvio");

                    b.ToTable("EtapaSeguimientos");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Cliente", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Empleados.Administrador", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Empleados.Funcionario", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado");

                    b.HasDiscriminator().HasValue("Funcionario");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Agencia.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DireccionPostal");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Agencia.Ubicacion", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Latitud")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Latitud");

                            b1.Property<decimal>("Longitud")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Longitud");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Envio", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuarios.Usuario.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.Vo.Envio.NroTracking", "NroTracking", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("NroTracking");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Envio.Peso", "Peso", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(10, 3)
                                .HasColumnType("decimal(10,3)")
                                .HasColumnName("Peso");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("NroTracking")
                        .IsRequired();

                    b.Navigation("Peso")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EtapaSeguimiento", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Envios.Envio", "Envio")
                        .WithMany()
                        .HasForeignKey("IdEnvio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.Vo.EtapaSeguimiento.Comentario", "Comentario", b1 =>
                        {
                            b1.Property<int>("EtapaSeguimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Comentario");

                            b1.HasKey("EtapaSeguimientoId");

                            b1.ToTable("EtapaSeguimientos");

                            b1.WithOwner()
                                .HasForeignKey("EtapaSeguimientoId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.EtapaSeguimiento.Fecha", "Fecha", b1 =>
                        {
                            b1.Property<int>("EtapaSeguimientoId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("datetime2")
                                .HasColumnName("Fecha");

                            b1.HasKey("EtapaSeguimientoId");

                            b1.ToTable("EtapaSeguimientos");

                            b1.WithOwner()
                                .HasForeignKey("EtapaSeguimientoId");
                        });

                    b.Navigation("Comentario")
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Envio");

                    b.Navigation("Fecha")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario", b =>
                {
                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Apellido", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Apellido");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Clave", "Clave", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Clave");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Correo", "Correo", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Correo");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Telefono");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Clave")
                        .IsRequired();

                    b.Navigation("Correo")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Telefono")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
