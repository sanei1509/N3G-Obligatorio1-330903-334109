// <auto-generated />
using System;
using LogicaAccesoDatos.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20250519003929_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Agencias");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        },
                        new
                        {
                            Id = 5
                        },
                        new
                        {
                            Id = 6
                        },
                        new
                        {
                            Id = 7
                        },
                        new
                        {
                            Id = 8
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Accion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("IdEmpleado");

                    b.Property<int>("IdResponsable")
                        .HasColumnType("int")
                        .HasColumnName("IdResponsable");

                    b.HasKey("Id");

                    b.ToTable("Auditorias", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCreacion");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFinalizacion");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios", (string)null);

                    b.HasDiscriminator().HasValue("Envio");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EtapaSeguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEnvio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEnvio");

                    b.ToTable("EtapasSeguimiento", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("Eliminado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Eliminado");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discriminator = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Discriminator = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 4,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 5,
                            Discriminator = "Admin"
                        },
                        new
                        {
                            Id = 6,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 7,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 8,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 9,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 10,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 11,
                            Discriminator = "Cliente"
                        },
                        new
                        {
                            Id = 12,
                            Discriminator = "Cliente"
                        });
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Comun", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Envios.Envio");

                    b.Property<int>("LugarRetiroId")
                        .HasColumnType("int")
                        .HasColumnName("LugarRetiroId");

                    b.HasIndex("LugarRetiroId");

                    b.HasDiscriminator().HasValue("Comun");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Urgente", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Envios.Envio");

                    b.HasDiscriminator().HasValue("Urgente");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Cliente", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Empleados.Administrador", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Empleados.Funcionario", b =>
                {
                    b.HasBaseType("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado");

                    b.HasDiscriminator().HasValue("Funcionario");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Agencia", b =>
                {
                    b.OwnsOne("LogicaNegocio.Vo.Agencia.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DireccionPostal");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");

                            b1.HasData(
                                new
                                {
                                    AgenciaId = 1,
                                    Value = "Buenos Aires 451, Ciudad Vieja"
                                },
                                new
                                {
                                    AgenciaId = 2,
                                    Value = "Bulevar Artigas 1825, Terminal Tres Cruces"
                                },
                                new
                                {
                                    AgenciaId = 3,
                                    Value = "Av. Ing. Luis Giannattasio Km 21.500"
                                },
                                new
                                {
                                    AgenciaId = 4,
                                    Value = "Ruta 8 Km 23.800"
                                },
                                new
                                {
                                    AgenciaId = 5,
                                    Value = "Ruta Interbalnearia Km 62.800"
                                },
                                new
                                {
                                    AgenciaId = 6,
                                    Value = "Av. Julieta s/n, Salinas"
                                },
                                new
                                {
                                    AgenciaId = 7,
                                    Value = "Margarita Martínez de Fariña s/n, San Bautista"
                                },
                                new
                                {
                                    AgenciaId = 8,
                                    Value = "Ruta 85 s/n, Toledo"
                                });
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");

                            b1.HasData(
                                new
                                {
                                    AgenciaId = 1,
                                    Value = "Palacio de Correos – Montevideo"
                                },
                                new
                                {
                                    AgenciaId = 2,
                                    Value = "Sucursal Tres Cruces – Montevideo"
                                },
                                new
                                {
                                    AgenciaId = 3,
                                    Value = "Sucursal Lagomar – Canelones"
                                },
                                new
                                {
                                    AgenciaId = 4,
                                    Value = "Sucursal Barros Blancos – Canelones"
                                },
                                new
                                {
                                    AgenciaId = 5,
                                    Value = "Sucursal San Luis – Canelones"
                                },
                                new
                                {
                                    AgenciaId = 6,
                                    Value = "Sucursal Salinas – Canelones"
                                },
                                new
                                {
                                    AgenciaId = 7,
                                    Value = "Sucursal San Bautista – Canelones"
                                },
                                new
                                {
                                    AgenciaId = 8,
                                    Value = "Sucursal Toledo – Canelones"
                                });
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Agencia.Ubicacion", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Latitud")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Latitud");

                            b1.Property<decimal>("Longitud")
                                .HasPrecision(9, 6)
                                .HasColumnType("decimal(9,6)")
                                .HasColumnName("Longitud");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");

                            b1.HasData(
                                new
                                {
                                    AgenciaId = 1,
                                    Latitud = -34.9052m,
                                    Longitud = -56.2036m
                                },
                                new
                                {
                                    AgenciaId = 2,
                                    Latitud = -34.8945m,
                                    Longitud = -56.1748m
                                },
                                new
                                {
                                    AgenciaId = 3,
                                    Latitud = -34.8220m,
                                    Longitud = -55.9960m
                                },
                                new
                                {
                                    AgenciaId = 4,
                                    Latitud = -34.7320m,
                                    Longitud = -56.0000m
                                },
                                new
                                {
                                    AgenciaId = 5,
                                    Latitud = -34.7500m,
                                    Longitud = -55.6000m
                                },
                                new
                                {
                                    AgenciaId = 6,
                                    Latitud = -34.7700m,
                                    Longitud = -55.8300m
                                },
                                new
                                {
                                    AgenciaId = 7,
                                    Latitud = -34.4500m,
                                    Longitud = -55.9500m
                                },
                                new
                                {
                                    AgenciaId = 8,
                                    Latitud = -34.7000m,
                                    Longitud = -56.0500m
                                });
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Envio", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuarios.Usuario.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.Vo.Envio.NroTracking", "NroTracking", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NroTracking");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Envio.Peso", "Peso", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Value")
                                .HasPrecision(10, 3)
                                .HasColumnType("decimal(10,3)")
                                .HasColumnName("Peso");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("NroTracking")
                        .IsRequired();

                    b.Navigation("Peso")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.EtapaSeguimiento", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Usuarios.Usuario.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Envios.Envio", "Envio")
                        .WithMany("EtapasSeguimiento")
                        .HasForeignKey("IdEnvio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.Vo.Envio.NroTracking", "NroTracking", b1 =>
                        {
                            b1.Property<int>("EtapaSeguimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NroTracking");

                            b1.HasKey("EtapaSeguimientoId");

                            b1.ToTable("EtapasSeguimiento");

                            b1.WithOwner()
                                .HasForeignKey("EtapaSeguimientoId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.EtapaSeguimiento.Comentario", "Comentario", b1 =>
                        {
                            b1.Property<int>("EtapaSeguimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Comentario");

                            b1.HasKey("EtapaSeguimientoId");

                            b1.ToTable("EtapasSeguimiento");

                            b1.WithOwner()
                                .HasForeignKey("EtapaSeguimientoId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.EtapaSeguimiento.Fecha", "Fecha", b1 =>
                        {
                            b1.Property<int>("EtapaSeguimientoId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Value")
                                .HasColumnType("datetime2")
                                .HasColumnName("Fecha");

                            b1.HasKey("EtapaSeguimientoId");

                            b1.ToTable("EtapasSeguimiento");

                            b1.WithOwner()
                                .HasForeignKey("EtapaSeguimientoId");
                        });

                    b.Navigation("Comentario")
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Envio");

                    b.Navigation("Fecha")
                        .IsRequired();

                    b.Navigation("NroTracking")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Usuarios.Usuario.Usuario", b =>
                {
                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.HasData(
                                new
                                {
                                    UsuarioId = 1,
                                    Value = "Juan"
                                },
                                new
                                {
                                    UsuarioId = 2,
                                    Value = "María"
                                },
                                new
                                {
                                    UsuarioId = 5,
                                    Value = "Gerente"
                                },
                                new
                                {
                                    UsuarioId = 3,
                                    Value = "Carlos"
                                },
                                new
                                {
                                    UsuarioId = 4,
                                    Value = "Fernanda"
                                },
                                new
                                {
                                    UsuarioId = 6,
                                    Value = "Luis"
                                },
                                new
                                {
                                    UsuarioId = 7,
                                    Value = "Sofía"
                                },
                                new
                                {
                                    UsuarioId = 8,
                                    Value = "Pedro"
                                },
                                new
                                {
                                    UsuarioId = 9,
                                    Value = "Ana"
                                },
                                new
                                {
                                    UsuarioId = 10,
                                    Value = "Martín"
                                },
                                new
                                {
                                    UsuarioId = 11,
                                    Value = "Laura"
                                },
                                new
                                {
                                    UsuarioId = 12,
                                    Value = "Diego"
                                });
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Apellido", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Apellido");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.HasData(
                                new
                                {
                                    UsuarioId = 1,
                                    Value = "Pérez"
                                },
                                new
                                {
                                    UsuarioId = 2,
                                    Value = "Gómez"
                                },
                                new
                                {
                                    UsuarioId = 5,
                                    Value = "Apellido"
                                },
                                new
                                {
                                    UsuarioId = 3,
                                    Value = "Rodríguez"
                                },
                                new
                                {
                                    UsuarioId = 4,
                                    Value = "López"
                                },
                                new
                                {
                                    UsuarioId = 6,
                                    Value = "Martínez"
                                },
                                new
                                {
                                    UsuarioId = 7,
                                    Value = "Ruiz"
                                },
                                new
                                {
                                    UsuarioId = 8,
                                    Value = "Díaz"
                                },
                                new
                                {
                                    UsuarioId = 9,
                                    Value = "Fernández"
                                },
                                new
                                {
                                    UsuarioId = 10,
                                    Value = "Sosa"
                                },
                                new
                                {
                                    UsuarioId = 11,
                                    Value = "Castro"
                                },
                                new
                                {
                                    UsuarioId = 12,
                                    Value = "Navarro"
                                });
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Clave", "Clave", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Clave");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.HasData(
                                new
                                {
                                    UsuarioId = 1,
                                    Value = "admin123"
                                },
                                new
                                {
                                    UsuarioId = 2,
                                    Value = "admin123"
                                },
                                new
                                {
                                    UsuarioId = 5,
                                    Value = "Gerente2025."
                                },
                                new
                                {
                                    UsuarioId = 3,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 4,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 6,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 7,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 8,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 9,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 10,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 11,
                                    Value = "cliente123"
                                },
                                new
                                {
                                    UsuarioId = 12,
                                    Value = "cliente123"
                                });
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Correo", "Correo", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Correo");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.HasData(
                                new
                                {
                                    UsuarioId = 1,
                                    Value = "juan@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 2,
                                    Value = "maria@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 5,
                                    Value = "administrador@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 3,
                                    Value = "carlitos@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 4,
                                    Value = "fernanda@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 6,
                                    Value = "luis@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 7,
                                    Value = "sofia@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 8,
                                    Value = "pedro@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 9,
                                    Value = "ana@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 10,
                                    Value = "martin@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 11,
                                    Value = "laura@gmail.com"
                                },
                                new
                                {
                                    UsuarioId = 12,
                                    Value = "diego@gmail.com"
                                });
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Usuario.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Telefono");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.HasData(
                                new
                                {
                                    UsuarioId = 1,
                                    Value = "099123456"
                                },
                                new
                                {
                                    UsuarioId = 2,
                                    Value = "099654321"
                                },
                                new
                                {
                                    UsuarioId = 5,
                                    Value = "099100200"
                                },
                                new
                                {
                                    UsuarioId = 3,
                                    Value = "099122555"
                                },
                                new
                                {
                                    UsuarioId = 4,
                                    Value = "099777888"
                                },
                                new
                                {
                                    UsuarioId = 6,
                                    Value = "099666111"
                                },
                                new
                                {
                                    UsuarioId = 7,
                                    Value = "099222333"
                                },
                                new
                                {
                                    UsuarioId = 8,
                                    Value = "099333444"
                                },
                                new
                                {
                                    UsuarioId = 9,
                                    Value = "099444555"
                                },
                                new
                                {
                                    UsuarioId = 10,
                                    Value = "099555666"
                                },
                                new
                                {
                                    UsuarioId = 11,
                                    Value = "099888999"
                                },
                                new
                                {
                                    UsuarioId = 12,
                                    Value = "099999000"
                                });
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Clave")
                        .IsRequired();

                    b.Navigation("Correo")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Telefono")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Comun", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Agencia", "LugarRetiro")
                        .WithMany()
                        .HasForeignKey("LugarRetiroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LugarRetiro");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Urgente", b =>
                {
                    b.OwnsOne("LogicaNegocio.Vo.Agencia.DireccionPostal", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("UrgenteId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DireccionPostal");

                            b1.HasKey("UrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("UrgenteId");
                        });

                    b.OwnsOne("LogicaNegocio.Vo.Envio.Entregado", "Entregado", b1 =>
                        {
                            b1.Property<int>("UrgenteId")
                                .HasColumnType("int");

                            b1.Property<bool>("Value")
                                .HasColumnType("bit")
                                .HasColumnName("Entregado");

                            b1.HasKey("UrgenteId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("UrgenteId");
                        });

                    b.Navigation("DireccionPostal");

                    b.Navigation("Entregado");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Envios.Envio", b =>
                {
                    b.Navigation("EtapasSeguimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
